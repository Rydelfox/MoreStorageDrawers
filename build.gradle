buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7.+'
    }
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'
apply from: 'https://raw.githubusercontent.com/SizableShrimp/Forge-Class-Remapper/main/classremapper.gradle'

version = "${mc_part}-${major}.${minor}.${patch}"
group = 'com.rydelfox.morestoragedrawers' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "${mod_id}"

java.toolchain.languageVersion = JavaLanguageVersion.of(17) // Mojang ships Java 17 to end users, so your mod should target Java 17.

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    // The mappings can be changed at any time, and must be in the following format.
    // Channel:   Version:
    // snapshot   YYYYMMDD   Snapshot are built nightly.
    // stable     #          Stables are built at the discretion of the MCP team.
    // official   MCVersion  Official field/method names from Mojang mapping files
    //
    // You must be aware of the Mojang license when using the 'official' mappings.
    // See more information here: https://github.com/MinecraftForge/MCPConfig/blob/master/Mojang.md
    //
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: 'official', version: mc_version
    //mappings channel: 'snapshot', version: '20200723-1.16.1'
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
    
    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            // The markers can be changed as needed.
            // "SCAN": For mods scan.
            // "REGISTRIES": For firing of registry events.
            // "REGISTRYDUMP": For getting the contents of all registries.
            property 'forge.logging.markers', 'REGISTRIES'

            // Recommended logging level for the console
            // You can set various levels here.
            // Please read: https://stackoverflow.com/questions/2031163/when-to-use-the-different-log-levels
            property 'forge.logging.console.level', 'debug'

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            // The markers can be changed as needed.
            // "SCAN": For mods scan.
            // "REGISTRIES": For firing of registry events.
            // "REGISTRYDUMP": For getting the contents of all registries.
            property 'forge.logging.markers', 'REGISTRIES'

            // Recommended logging level for the console
            // You can set various levels here.
            // Please read: https://stackoverflow.com/questions/2031163/when-to-use-the-different-log-levels
            property 'forge.logging.console.level', 'debug'

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            // The markers can be changed as needed.
            // "SCAN": For mods scan.
            // "REGISTRIES": For firing of registry events.
            // "REGISTRYDUMP": For getting the contents of all registries.
            property 'forge.logging.markers', 'REGISTRIES'

            // Recommended logging level for the console
            // You can set various levels here.
            // Please read: https://stackoverflow.com/questions/2031163/when-to-use-the-different-log-levels
            property 'forge.logging.console.level', 'debug'

            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', 'morestorageblocks', '--all',
                    '--output', file('src/generated/resources/').toString(),
                    '--existing', file('src/main/resources/').toString(),
                    '--existing', file('src/generated/resources/')

            environment 'target', 'fmluserdevdata'

            mods {
                morestoragedrawers {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets {
    main {
        resources {
            srcDirs 'src/generated/resources'
        }
    }
}

repositories {
    mavenCentral()
    maven { url = "https://minecraft.curseforge.com/api/maven/" }
    maven {
        url = "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }
}


dependencies {
    implementation 'org.jetbrains:annotations:19.0.0'
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"

    implementation fg.deobf("curse.maven:StorageDrawers-223852:${storagedrawers_version}")

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

    runtimeOnly fg.deobf('curse.maven:geckolib-388172:4407241')
    runtimeOnly fg.deobf("curse.maven:curios-309927:4418021")
    //runtimeOnly fg.deobf("curse.maven:observerlib-316833:3333962")
    runtimeOnly fg.deobf("curse.maven:patchouli-306770:4031402")
    runtimeOnly fg.deobf("curse.maven:blueprint-382216:4442628")
    runtimeOnly fg.deobf("curse.maven:terrablender-563928:4205732")
    runtimeOnly fg.deobf("curse.maven:corgilib-693313:4416614") // for BYG
    //runtimeOnly fg.deobf("curse.maven:astralsorcery-241721:3333980")
    runtimeOnly fg.deobf("curse.maven:biomesoplenty-220318:4473556")
    runtimeOnly fg.deobf("curse.maven:ars-nouveau-401955:4468989")
    runtimeOnly fg.deobf("curse.maven:botania-225643:4415871")
    //runtimeOnly fg.deobf("curse.maven:eidolon-429625:3157832")
    //runtimeOnly fg.deobf("curse.maven:hexblades-528079:3646326")
    runtimeOnly fg.deobf("curse.maven:naturesaura-306626:4419637")
    runtimeOnly fg.deobf("curse.maven:twilightforest-227639:4389567")
    //runtimeOnly fg.deobf("curse.maven:betterendforge-428877:3467948")
    runtimeOnly fg.deobf("curse.maven:desolation-445926:4271429")
    runtimeOnly fg.deobf("curse.maven:byg-247560:4426501")
    //runtimeOnly fg.deobf("curse.maven:outerend-430404:3404058")
    //runtimeOnly fg.deobf("curse.maven:wildnaturebiomes-539889:3503810")
    runtimeOnly fg.deobf("curse.maven:JEI-238222:4434397") // Only for testing
    //runtimeOnly fg.deobf("curse.maven:Jade-324717:3681458") // Only for testing
    runtimeOnly fg.deobf("curse.maven:WTHIT-455982:4463703") // Only for testing
    runtimeOnly fg.deobf('curse.maven:bad-packets-615134:4073854')

}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    exclude ".cache"
    manifest {
        attributes([
            "Specification-Title": "${mod_id}",
            "Specification-Vendor": "RydelFox",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${project.version}",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

processResources {
    duplicatesStrategy(DuplicatesStrategy.INCLUDE)
}

// Example configuration to allow publishing using the maven-publish task
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar') 
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
//publish.dependsOn('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}